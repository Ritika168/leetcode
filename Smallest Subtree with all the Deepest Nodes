/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int maxDepth=0;
    TreeNode* result=nullptr;
public:
int postOrder(TreeNode* node, int depth){
        if(node==nullptr) return depth;
        int left= postOrder(node->left,depth+1);
        int right= postOrder(node->right,depth+1); 
        if(left==right){
            maxDepth=max(maxDepth,left);
            if(maxDepth==left){
                result=node;
            }
        }
        return max(left,right);
    }
    TreeNode* subtreeWithAllDeepest(TreeNode* root) {
        postOrder(root,0);
        return result;
    }
    
};
