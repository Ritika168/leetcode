class Solution {
public:
    vector<int> applyOperations(vector<int>& nums) {
   
    int n=nums.size();
    for (int i =0;i<n-1;i++)
    {
       if(nums[i] == nums[i + 1]) 
       {
        nums[i]*=2;
        nums[i + 1] = 0;  // Set the next number to 0
                i++ ;}
       
    }
    stable_partition(nums.begin(), nums.end(), [](int x) { return x != 0; });/*stable_partition(start, end, predicate);start and end define the range (iterators).
predicate is a function or lambda that returns true or false for each element.
Elements for which predicate returns true appear before elements for which it returns false.*/
Relative order of elements is preserved.

  return nums;  }
};
