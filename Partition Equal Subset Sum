class Solution {
public:
    bool subsetSumToK(int n ,int k, vector<int> &arr){
        vector<bool> prev(k+1,0), curr(k+1,0);
        if(arr[0]<=k)
        prev [arr[0]]=true;
        for(int i=0;i<n;i++){
            for(int target=1;target<=k;target++){
                bool notTake=prev[target];
                bool take=false;
                if(arr[i]<=target)
                take= prev[target-arr[i]];
                curr[target]=take| notTake;

            }
            prev=curr;
        }
        return prev[k];
    
    }
    bool canPartition(vector<int>& nums) {
     int totsum=0;
     int n=nums.size();
     for(int i=0;i<n;i++)
     totsum+=nums[i];
     if(totsum%2) return false;
     int target= totsum/2;
     return subsetSumToK( n ,target, nums) ;  
    }
};
