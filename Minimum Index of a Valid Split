class Solution {
    int mooresVotingAlgo(vector<int>& nums) {
        int majority_element = nums[0], freq = 1;
        
        for (int i = 1; i < nums.size(); ++i) {
            if (nums[i] == majority_element) 
                freq++;
            else 
                freq--;

            if (freq == 0) {
                majority_element = nums[i];
                freq = 1;
            }
        }
        
        // Verify if it's actually the majority
        int count = 0;
        for (int num : nums) {
            if (num == majority_element) 
                count++;
        }
        
        if (count <= nums.size() / 2)  // Not a real majority element
            return -1;
        
        return majority_element;
    }

public:
    int minimumIndex(vector<int>& nums) {
        int n = nums.size();
        int majority_element = mooresVotingAlgo(nums);
        
        if (majority_element == -1) return -1; // No valid majority element
        
        int total_count = 0;
        
        // Count occurrences of the majority element
        for (int num : nums) {
            if (num == majority_element)
                total_count++;
        }

        int prefix_count = 0;
        for (int i = 0; i < n; ++i) {
            if (nums[i] == majority_element)
                prefix_count++;

            int remaining_count = total_count - prefix_count;

            // Check if prefix and suffix both satisfy the majority condition
            if (prefix_count > (i + 1) / 2 && remaining_count > (n - i - 1) / 2)
                return i;
        }

        return -1;
    }
};
