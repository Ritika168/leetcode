class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
         int n = matrix.size();           // number of rows
         int m = matrix[0].size();        // number of columns
         vector<int> row(n, 0), col(m, 0);
         for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
             if(matrix[i][j] == 0){
                row[i]=1;
                col[j]=1;
              }
           }
         }
         for(int i = 0; i < n ; i++){
            for(int j = 0; j <m; j++){
                if(row[i]||col[j]){
                    matrix[i][j]=0;
                }
            }
         }
    }
};


// optimal solution 

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
         int n = matrix.size();           // number of rows
         int m = matrix[0].size();        // number of columns
         int col0 = 1;
         for(int i = 0; i < n; i++ ){
            for(int j = 0; j < m ; j++ ){
                if(matrix[i][j]==0){
                    matrix[i][0] = 0; // mark the i-th row
                    if(j!=0) //mark the j-th col
                     matrix[0][j]=0;
                    else 
                     col0 = 0; 
                }
            }
         }
         for(int i=1;i<n;i++){
            for(int j=1;j<m;j++){
                if(matrix[i][j]!=0){
                 //check for col & row
                 if(matrix[0][j]==0 || matrix[i][0]==0 ){
                    matrix[i][j]=0;
                 }
              }
            }
         }
         if(matrix[0][0]==0){
            for(int j=0;j<m;j++) 
            matrix[0][j]=0;
         }
         if(col0 == 0){
            for(int i=0;i<n;i++){
                matrix[i][0]=0;
            }
         }
    }
};
