class Solution {
public:
    long long countBadPairs(vector<int>& nums) {
      unordered_map<int, long long> freq;
        long long totalPairs = 0;
        int n = nums.size();

        for (int i = 0; i < n; i++) {
            int key = nums[i] - i;
            freq[key]++;
        }

        long long total = 1LL * n * (n - 1) / 2;  // Total number of pairs

        // Subtract number of good pairs (where nums[i] - i == nums[j] - j)
        for (auto& [key, val] : freq) {
            totalPairs += val * (val - 1) / 2;
        }

        return total - totalPairs;  // Total - goodPairs = badPairs
    }
};
